
import streamlit as st
import datetime

# --- ‡∏£‡∏∞‡∏ö‡∏ö Login ---
def login():
    st.title("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")
    password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
    if password == "pwss2021":
        st.session_state["logged_in"] = True
        st.experimental_rerun()
    elif password != "":
        st.error("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

if "logged_in" not in st.session_state:
    login()
    st.stop()
import streamlit as st
from datetime import datetime

st.set_page_config(page_title="PWS's Life Cafe", layout="wide")
st.title("PWS's Life Cafe")

# ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
menu_categories = {
    "‡∏Å‡∏≤‡πÅ‡∏ü": {
        "‡∏£‡πâ‡∏≠‡∏ô": {
            "‡πÄ‡∏≠‡∏™‡πÄ‡∏û‡∏£‡∏™‡πÇ‡∏ã‡πà": 30,
            "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà": 30,
            "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 35,
            "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 35,
            "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 40,
            "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 40,
            "Blue Sky Coffee": 40,
            "‡∏Å‡∏≤‡πÅ‡∏ü‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß": 50
        },
        "‡πÄ‡∏¢‡πá‡∏ô": {
            "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà": 35,
            "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 40,
            "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 40,
            "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 45,
            "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 45,
            "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà‡∏™‡πâ‡∏°": 50,
            "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á": 50,
            "Blue Sky Coffee": 40,
            "‡∏Å‡∏≤‡πÅ‡∏ü‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß": 50
        },
        "‡∏õ‡∏±‡πà‡∏ô": {
            "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà": 40,
            "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 45,
            "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 45,
            "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 50,
            "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 50
        }
    },
    "‡∏ä‡∏≤": {
        "‡∏°‡∏±‡∏ó‡∏â‡∏∞ ‡∏£‡πâ‡∏≠‡∏ô": 30,
        "‡∏°‡∏±‡∏ó‡∏â‡∏∞‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 40,
        "‡∏°‡∏±‡∏ó‡∏â‡∏∞‡∏•‡∏≤‡πÄ‡∏ï‡πâ ‡∏õ‡∏±‡πà‡∏ô": 45,
        "‡∏ä‡∏≤‡∏°‡∏∞‡∏ô‡∏≤‡∏ß": 35
    },
    "‡∏ô‡∏°": {
        "‡∏ô‡∏°‡∏™‡∏î‡∏™‡∏ï‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà": 40,
        "‡∏ô‡∏°‡∏Å‡∏•‡πâ‡∏ß‡∏¢": 40,
        "‡∏ô‡∏°‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 40,
        "‡∏ô‡∏°‡πÄ‡∏ú‡∏∑‡∏≠‡∏Å": 40,
        "‡∏ä‡∏≤‡∏ô‡∏°": 40,
        "‡∏ô‡∏°‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà": 40
    },
    "‡πÇ‡∏ã‡∏î‡∏≤": {
        "‡∏ö‡∏•‡∏π‡πÇ‡∏ã‡∏î‡∏≤": 40,
        "‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤": 35,
        "‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤": 40,
        "‡∏≠‡∏¥‡∏ï‡∏≤‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏ã‡∏î‡∏≤": 35,
        "‡∏•‡∏¥‡πâ‡∏ô‡∏à‡∏µ‡πà‡πÇ‡∏ã‡∏î‡∏≤": 35,
        "‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà‡∏°‡∏¥‡πâ‡∏ô‡∏ï‡πå": 35,
        "‡∏ä‡∏≤‡∏™‡∏ï‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà": 35
    },
    "‡∏™‡∏°‡∏π‡∏ó‡∏ï‡∏µ‡πâ": {
        "Orange Smoothie": 45,
        "Lychee Smoothie": 45,
        "Mango Smoothie": 45,
        "Kiwi Smoothie": 45,
        "Strawberry Smoothie": 45,
        "Blueberry Smoothie": 45,
        "Passion Fruit Smoothie": 45
    }
}

# Session state
if "orders" not in st.session_state:
    st.session_state.orders = []
if "current_order" not in st.session_state:
    st.session_state.current_order = []

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å
selected_category = st.sidebar.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π", list(menu_categories.keys()))

# ‡πÄ‡∏°‡∏ô‡∏π‡∏¢‡πà‡∏≠‡∏¢
submenu = menu_categories[selected_category]
if isinstance(submenu, dict) and all(isinstance(v, dict) for v in submenu.values()):
    sublevel = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (‡∏£‡πâ‡∏≠‡∏ô/‡πÄ‡∏¢‡πá‡∏ô/‡∏õ‡∏±‡πà‡∏ô)", list(submenu.keys()))
    subitems = submenu[sublevel]
else:
    subitems = submenu

st.subheader(f"{selected_category} {'('+sublevel+')' if 'sublevel' in locals() else ''}")

selected_items = {}
for item, price in subitems.items():
    qty = st.number_input(f"{item} ({price}‡∏ø)", min_value=0, max_value=10, step=1, key=f"{item}_{selected_category}")
    if qty > 0:
        selected_items[item] = {"qty": qty, "price": price}

st.markdown("---")

col1, col2 = st.columns(2)
with col1:
    customer = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤")
with col2:
    receive = st.number_input("‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏≤ (‡∏ö‡∏≤‡∏ó)", min_value=0, step=1)

if st.button("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå"):
    if selected_items and customer:
        total = sum(i['qty'] * i['price'] for i in selected_items.values())
        change = receive - total
        order = {
            "customer": customer,
            "time": datetime.now().strftime("%H:%M:%S"),
            "items": selected_items,
            "total": total,
            "receive": receive,
            "change": change,
            "status": "‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à"
        }
        st.session_state.orders.append(order)
        st.success(f"‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á {customer} ‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏ß‡∏° {total} ‡∏ö‡∏≤‡∏ó ‡∏ó‡∏≠‡∏ô {change} ‡∏ö‡∏≤‡∏ó")
        # ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤
        for item in selected_items:
            st.session_state[f"{item}_{selected_category}"] = 0
        st.session_state.current_order = []
    else:
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

# ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
st.header("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå")
for i, order in enumerate(st.session_state.orders):
    with st.expander(f"{order['customer']} ‡πÄ‡∏ß‡∏•‡∏≤ {order['time']} [{order['status']}]"):
        for item, detail in order['items'].items():
            st.write(f"- {item} x {detail['qty']} = {detail['qty'] * detail['price']}‡∏ø")
        st.write(f"**‡∏£‡∏ß‡∏°:** {order['total']}‡∏ø | ‡∏£‡∏±‡∏ö‡∏°‡∏≤: {order['receive']}‡∏ø | ‡∏ó‡∏≠‡∏ô: {order['change']}‡∏ø")
        if order['status'] == "‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à":
            if st.button("‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß", key=f"done_{i}"):
                st.session_state.orders[i]['status'] = "‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß"

# ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ
st.header("‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")
all_items = []
total_income = 0
total_cups = 0
for order in st.session_state.orders:
    total_income += order['total']
    for item, detail in order['items'].items():
        total_cups += detail['qty']

st.metric("‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°", f"{total_income} ‡∏ö‡∏≤‡∏ó")
st.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢", f"{total_cups} ‡πÅ‡∏Å‡πâ‡∏ß")
