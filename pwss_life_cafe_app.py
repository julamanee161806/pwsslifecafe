
import streamlit as st
import datetime

# --- ‡∏£‡∏∞‡∏ö‡∏ö Login ---
def login():
    st.title("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")
    password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
    if password == "pwss2021":
        st.session_state["logged_in"] = True
        st.experimental_rerun()
    elif password != "":
        st.error("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

if "logged_in" not in st.session_state:
    login()
    st.stop()

st.set_page_config(page_title="PWS'S LIFE CAFE", layout="wide")

if "orders" not in st.session_state:
    st.session_state.orders = []
if "current_order" not in st.session_state:
    st.session_state.current_order = []
if "selected_category" not in st.session_state:
    st.session_state.selected_category = None

menu_data = {
    "‡∏Å‡∏≤‡πÅ‡∏ü": {
        "‡∏£‡πâ‡∏≠‡∏ô": {
            "‡πÄ‡∏≠‡∏™‡πÄ‡∏û‡∏£‡∏™‡πÇ‡∏ã‡πà": 30, "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà": 30, "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 35, "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 35,
            "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 40, "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 40
        },
        "‡πÄ‡∏¢‡πá‡∏ô": {
            "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà": 35, "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 40, "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 40, "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 45,
            "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 45, "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà‡∏™‡πâ‡∏°": 50, "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á": 50,
            "Blue Sky Coffee": 40, "‡∏Å‡∏≤‡πÅ‡∏ü‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß": 50
        },
        "‡∏õ‡∏±‡πà‡∏ô": {
            "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 45, "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 45, "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 50, "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 50
        }
    },
    "‡∏ä‡∏≤": {
        "‡∏£‡πâ‡∏≠‡∏ô": {"‡∏°‡∏±‡∏ó‡∏â‡∏∞": 30, "‡∏ä‡∏≤‡∏°‡∏∞‡∏•‡∏¥": 35},
        "‡πÄ‡∏¢‡πá‡∏ô": {"‡∏°‡∏±‡∏ó‡∏â‡∏∞‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 40},
        "‡∏õ‡∏±‡πà‡∏ô": {"‡∏°‡∏±‡∏ó‡∏â‡∏∞‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 45}
    },
    "‡∏ô‡∏°": {
        "‡πÄ‡∏°‡∏ô‡∏π": {
            "‡∏ô‡∏°‡∏™‡∏î‡∏™‡∏ï‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà": 40, "‡∏ô‡∏°‡∏Å‡∏•‡πâ‡∏ß‡∏¢": 40, "‡∏ô‡∏°‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 40,
            "‡∏ô‡∏°‡πÄ‡∏ú‡∏∑‡∏≠‡∏Å": 40, "‡∏ä‡∏≤‡∏ô‡∏°": 40, "‡∏ô‡∏°‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà": 40
        }
    },
    "‡πÇ‡∏ã‡∏î‡∏≤": {
        "‡πÄ‡∏°‡∏ô‡∏π": {
            "‡∏ö‡∏•‡∏π‡πÇ‡∏ã‡∏î‡∏≤": 40, "‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤": 35, "‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤": 40,
            "‡∏≠‡∏¥‡∏ï‡∏≤‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÇ‡∏ã‡∏î‡∏≤": 35, "‡∏•‡∏¥‡πâ‡∏ô‡∏à‡∏µ‡πà‡πÇ‡∏ã‡∏î‡∏≤": 35, "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà‡∏°‡∏¥‡πâ‡∏ô‡∏ï‡πå": 35,
            "‡∏ä‡∏≤‡∏™‡∏ï‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà": 35
        }
    },
    "‡∏™‡∏°‡∏π‡∏ï‡∏ï‡∏µ‡πâ": {
        "‡πÄ‡∏°‡∏ô‡∏π": {
            "‡∏™‡πâ‡∏°": 45, "‡∏•‡∏¥‡πâ‡∏ô‡∏à‡∏µ‡πà": 45, "‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á": 45, "‡∏Å‡∏µ‡∏ß‡∏µ‡πà": 45,
            "‡∏™‡∏ï‡∏£‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà": 45, "‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà": 45, "‡πÄ‡∏™‡∏≤‡∏ß‡∏£‡∏™": 45
        }
    }
}

# Sidebar ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å
st.sidebar.header("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π")
main_categories = ["‡∏Å‡∏≤‡πÅ‡∏ü", "‡∏ä‡∏≤", "‡∏ô‡∏°", "‡πÇ‡∏ã‡∏î‡∏≤", "‡∏™‡∏°‡∏π‡∏ï‡∏ï‡∏µ‡πâ"]
selected_main = st.sidebar.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà", main_categories)

st.session_state.selected_category = selected_main

sub_categories = list(menu_data[selected_main].keys())
selected_sub = None
if len(sub_categories) > 1:
    selected_sub = st.sidebar.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó", sub_categories)
else:
    selected_sub = sub_categories[0]

# ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π
if selected_main and selected_sub:
    st.header(f"{selected_main} - {selected_sub}")
    for item, price in menu_data[selected_main][selected_sub].items():
        col1, col2 = st.columns([3, 1])
        with col1:
            st.markdown(f"**{item}** - {price}‡∏ø")
        with col2:
            qty = st.number_input(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {item}", min_value=0, step=1, key=item)
            if qty > 0:
                st.session_state.current_order.append({
                    "‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π": item,
                    "‡∏£‡∏≤‡∏Ñ‡∏≤": price,
                    "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": qty
                })

st.divider()

# ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
if st.session_state.current_order:
    st.subheader("‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
    total_price = sum(i["‡∏£‡∏≤‡∏Ñ‡∏≤"] * i["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"] for i in st.session_state.current_order)
    total_cups = sum(i["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"] for i in st.session_state.current_order)
    df_order = pd.DataFrame(st.session_state.current_order)
    st.table(df_order)
    st.markdown(f"**‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤:** {total_price} ‡∏ø")
    st.markdown(f"**‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß:** {total_cups}")

    pay_method = st.radio("‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô", ["‡∏™‡∏î", "‡πÇ‡∏≠‡∏ô"])
    amount_paid = st.number_input("‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤", min_value=0.0, step=1.0)
    change = amount_paid - total_price if amount_paid >= total_price else 0
    st.markdown(f"**‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:** {change:.2f} ‡∏ø")

    customer_name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤")
    if st.button("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå"):
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        st.session_state.orders.append({
            "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤": customer_name,
            "‡πÄ‡∏°‡∏ô‡∏π": st.session_state.current_order,
            "‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°": total_price,
            "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß": total_cups,
            "‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á": pay_method,
            "‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö": amount_paid,
            "‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô": change,
            "‡πÄ‡∏ß‡∏•‡∏≤": now,
            "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞": "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à"
        })
        st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        st.session_state.current_order = []

st.divider()
st.subheader("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
for i, order in enumerate(st.session_state.orders):
    with st.expander(f"{order['‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤']} | {order['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°']}‡∏ø | {order['‡πÄ‡∏ß‡∏•‡∏≤']}"):
        st.write("‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á:")
        for item in order["‡πÄ‡∏°‡∏ô‡∏π"]:
            st.write(f"- {item['‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π']} x {item['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']} = {item['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'] * item['‡∏£‡∏≤‡∏Ñ‡∏≤']} ‡∏ø")
        st.write(f"**‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞:** {order['‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á']}")
        st.write(f"**‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö:** {order['‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö']} ‡∏ø")
        st.write(f"**‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:** {order['‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô']} ‡∏ø")
        st.write(f"**‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß:** {order['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß']}")
        status = st.radio("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", ["‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à", "‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß"], index=0 if order["‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"] == "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à" else 1, key=f"status_{i}")
        order["‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"] = status
