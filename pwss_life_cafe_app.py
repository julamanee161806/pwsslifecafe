
import streamlit as st
import datetime

# --- ‡∏£‡∏∞‡∏ö‡∏ö Login ---
def login():
    st.title("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")
    password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
    if password == "pwss2021":
        st.session_state["logged_in"] = True
        st.experimental_rerun()
    elif password != "":
        st.error("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

if "logged_in" not in st.session_state:
    login()
    st.stop()

st.set_page_config(page_title="PWS's Life Cafe - ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏Ñ‡∏ä‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå", layout="wide")

===== ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û =====

menu_data = { "‡∏Å‡∏≤‡πÅ‡∏ü": { "‡∏£‡πâ‡∏≠‡∏ô": { "‡πÄ‡∏≠‡∏™‡πÄ‡∏û‡∏£‡∏™‡πÇ‡∏ã‡πà": 30, "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà": 30, "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 35, "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 35, "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 40, "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 40 }, "‡πÄ‡∏¢‡πá‡∏ô": { "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà": 35, "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 40, "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 40, "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 45, "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 45, "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà‡∏™‡πâ‡∏°": 50, "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á": 50, "Blue Sky Coffee": 40, "‡∏Å‡∏≤‡πÅ‡∏ü‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß": 50 }, "‡∏õ‡∏±‡πà‡∏ô": { "‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà": 40, "‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà": 45, "‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 45, "‡∏°‡∏≠‡∏Ñ‡∏Ñ‡πà‡∏≤": 50, "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 50, "‡∏ä‡πá‡∏≠‡∏Å‡πÇ‡∏Å": 45 } }, "‡∏ä‡∏≤": { "‡πÄ‡∏°‡∏ô‡∏π": { "‡∏°‡∏±‡∏ó‡∏â‡∏∞ ‡∏£‡πâ‡∏≠‡∏ô": 30, "‡∏°‡∏±‡∏ó‡∏â‡∏∞‡∏•‡∏≤‡πÄ‡∏ï‡πâ": 40, "‡∏°‡∏±‡∏ó‡∏â‡∏∞‡∏•‡∏≤‡πÄ‡∏ï‡πâ ‡∏õ‡∏±‡πà‡∏ô": 45, "‡∏ä‡∏≤‡∏°‡∏∞‡∏ô‡∏≤‡∏ß": 35, "‡∏ä‡∏≤‡∏ô‡∏°": 40 } }, "‡∏ô‡∏°": { "‡πÄ‡∏°‡∏ô‡∏π": { "‡∏ô‡∏°‡∏™‡∏ï‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà": 40, "‡∏ô‡∏°‡∏Å‡∏•‡πâ‡∏ß‡∏¢": 40, "‡∏ô‡∏°‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•": 40, "‡∏ô‡∏°‡πÄ‡∏ú‡∏∑‡∏≠‡∏Å": 40, "‡∏ô‡∏°‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà": 40 } }, "‡πÇ‡∏ã‡∏î‡∏≤": { "‡πÄ‡∏°‡∏ô‡∏π": { "‡∏ö‡∏•‡∏π‡πÇ‡∏ã‡∏î‡∏≤": 40, "‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤": 35, "‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤": 40, "‡∏≠‡∏¥‡∏ï‡∏≤‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏ã‡∏î‡∏≤": 35, "‡∏•‡∏¥‡πâ‡∏ô‡∏à‡∏µ‡πà‡πÇ‡∏ã‡∏î‡∏≤": 35, "‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà‡∏°‡∏¥‡πâ‡∏ô‡∏ï‡πå": 35, "‡∏ä‡∏≤‡∏™‡∏ï‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà": 35 } }, "‡∏™‡∏°‡∏π‡∏ó‡∏ï‡∏µ‡πâ": { "‡πÄ‡∏°‡∏ô‡∏π": { "Orange Smoothie ‡∏™‡πâ‡∏° ‡∏õ‡∏±‡πà‡∏ô": 45, "Lychee Smoothie ‡∏•‡∏¥‡πâ‡∏ô‡∏à‡∏µ‡πà ‡∏õ‡∏±‡πà‡∏ô": 45, "Mango Smoothie ‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á ‡∏õ‡∏±‡πà‡∏ô": 45, "Kiwi Smoothie ‡∏Å‡∏µ‡∏ß‡∏µ‡πà ‡∏õ‡∏±‡πà‡∏ô": 45, "Strawberry Smoothie ‡∏™‡∏ï‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà ‡∏õ‡∏±‡πà‡∏ô": 45, "Blueberry Smoothie ‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡∏µ‡πà ‡∏õ‡∏±‡πà‡∏ô": 45, "Passion Fruit Smoothie ‡πÄ‡∏™‡∏≤‡∏ß‡∏£‡∏™ ‡∏õ‡∏±‡πà‡∏ô": 45 } } }

if 'orders' not in st.session_state: st.session_state.orders = [] if 'selected_cat' not in st.session_state: st.session_state.selected_cat = None if 'selected_sub' not in st.session_state: st.session_state.selected_sub = None

st.title("‚òï PWS's LIFE CAFE - ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏Ñ‡∏ä‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå")

===== ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å =====

st.subheader("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å") cols = st.columns(len(menu_data)) for i, cat in enumerate(menu_data): if cols[i].button(cat): st.session_state.selected_cat = cat st.session_state.selected_sub = None

cat = st.session_state.selected_cat sub = st.session_state.selected_sub

===== ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ =====

if cat: st.divider() st.subheader(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î {cat}") subs = menu_data[cat].keys() cols = st.columns(len(subs)) for i, subcat in enumerate(subs): if cols[i].button(subcat): st.session_state.selected_sub = subcat

===== ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏•‡∏∞‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏±‡πà‡∏á =====

if cat and sub: st.divider() st.subheader(f"‡πÄ‡∏°‡∏ô‡∏π: {cat} > {sub}") items = menu_data[cat][sub]

quantities = {}
total = 0
for item, price in items.items():
    col1, col2, col3 = st.columns([3,1,1])
    col1.write(f"{item} - {price} ‡∏ö‡∏≤‡∏ó")
    q = col2.number_input("", min_value=0, step=1, key=f"{cat}_{sub}_{item}")
    col3.write(f"{price * q} ‡∏ö‡∏≤‡∏ó")
    quantities[item] = (price, q)
    total += price * q

cust = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö")
paid = st.number_input("‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏≤", min_value=0, step=1)
change = paid - total if paid >= total else 0

st.info(f"‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total} ‡∏ö‡∏≤‡∏ó")
st.success(f"‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: {change} ‡∏ö‡∏≤‡∏ó")

if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå"):
    order_items = [(i, p, q) for i, (p, q) in quantities.items() if q > 0]
    if order_items:
        st.session_state.orders.append({
            "name": cust,
            "items": order_items,
            "total": total,
            "paid": paid,
            "change": change,
            "time": datetime.datetime.now().strftime("%H:%M:%S"),
            "done": False
        })
        st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß")
        st.session_state.selected_cat = None
        st.session_state.selected_sub = None
        st.experimental_rerun()

===== ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î =====

st.divider() st.subheader("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î") if st.session_state.orders: for idx, o in enumerate(st.session_state.orders): with st.expander(f"{o['time']} ‚Äî {o['name']} | ‡∏¢‡∏≠‡∏î {o['total']} ‡∏ö‡∏≤‡∏ó"): for it, pr, q in o['items']: st.write(f"{it} x{q} = {pr*q} ‡∏ö‡∏≤‡∏ó") st.write(f"‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô: {o['paid']} | ‡∏ó‡∏≠‡∏ô: {o['change']} ‡∏ö‡∏≤‡∏ó") btn = st.button("‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß" if not o['done'] else "‚úîÔ∏è ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß", key=f"done_{idx}") if btn: st.session_state.orders[idx]['done'] = True st.experimental_rerun() else: st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå")

===== ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ =====

st.divider() if st.button("üìä ‡∏î‡∏π‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°"): total_sum = sum(o['total'] for o in st.session_state.orders) cups = sum(q for o in st.session_state.orders for _, _, q in o['items']) st.success(f"‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total_sum} ‡∏ö‡∏≤‡∏ó | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß: {cups} ")

